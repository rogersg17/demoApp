version: '3.8'

services:
  tms-app:
    build:
      context: ..
      dockerfile: deployment/Dockerfile
    container_name: tms-mvp
    restart: unless-stopped
    ports:
      - "3000:3000"
      - "9090:9090"  # Metrics port
    environment:
      - NODE_ENV=production
    env_file:
      - ./production.env
    volumes:
      - tms-data:/app/data
      - tms-logs:/app/logs
      - tms-backups:/app/backups
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - tms-network

  tms-nginx:
    image: nginx:alpine
    container_name: tms-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - tms-logs:/var/log/nginx
    depends_on:
      - tms-app
    networks:
      - tms-network

volumes:
  tms-data:
    driver: local
  tms-logs:
    driver: local
  tms-backups:
    driver: local

networks:
  tms-network:
    driver: bridge
